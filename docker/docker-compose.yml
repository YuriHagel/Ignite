version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  elasticsearch-data-volume:
    driver: local
  prometheus_data: { }

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ignite:
    image: apacheignite/ignite:2.13.0
    container_name: ignite
    ports:
      - "9011:9011"
      - "47101:47101"
      - "47501:47501"
      - "10801:10800"
      - "11211:11211"
      - "5005:5005"
    volumes:
      - ./ignite:/ignite
      - ./config:/config
    environment:
      - "IGNITE_QUIET=false"
      - "IGNITE_WORK_DIR=/ignite"
      - "IGNITE_JMX_PORT=9011"
      - "CONFIG_URI=/config/server.xml"
      - "OPTION_LIBS=ignite-log4j2,ignite-zookeeper"
      - >-
        JVM_OPTS=-Xms512m -Xmx512m
        -XX:+AggressiveOpts -XX:+UseG1GC -XX:+DisableExplicitGC -XX:MaxDirectMemorySize=256m
        -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9011
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=127.0.0.1:5005
    depends_on:
      - zookeeper

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    network_mode: host
    volumes:
      - ./docker-compose/prometheus:/etc/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    network_mode: host
    volumes:
      - ./docker-compose/grafana/provisioning/:/etc/docker/docker-compose/grafana/provisioning/
      - ./docker-compose/grafana/grafana.ini:/etc/docker/docker-compose/grafana/grafana.ini

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring

#  elasticsearch:
#    container_name: elasticsearch
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
#    environment:
#      - discovery.type=single-node
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    cap_add:
#      - IPC_LOCK
#    volumes:
#      - elasticsearch-data-volume:/usr/share/elasticsearch/data
#    ports:
#      - 9200:9200
#
#  kibana:
#    container_name: kibana
#    image: docker.elastic.co/kibana/kibana:7.8.1
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    ports:
#      - 5601:5601
#    volumes:
#      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
#    depends_on:
#      - elasticsearch
